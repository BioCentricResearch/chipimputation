params {
    project_name             = 'IMPUTE'
    project_description      = 'A small test dataset of the entire chromosomes 20-22'
    // Directories
    // homedir: Path to your script, where the nextflow main script is located
    homedir                 = "${HOME}/chipimputation"
    // outdir: where to put all pipeline's outputs
    output_dir              = "/global5/scratch/gerrit/projects/chipimputation/test.small/nf-output"
    impute_result           = "${params.output_dir}/impute_results"
    scripts                 = "${params.homedir}/scripts"

    dataset {
      studyName = "small"
    }

    // Reference panel 1
    ref_1 {
        dir               = "/global5/scratch/gerrit/projects/chipimputation/test.small/sample/${dataset.studyName}/refs"
        name              = 'KGP_minus_YRI'
        sampleFile        = "${ref_1.dir}/1000GP_Phase3.sample"
        hapFile           = "${ref_1.dir}/1000GP_Phase3_chr%s.hap.gz"
        legendFile        = "${ref_1.dir}/1000GP_Phase3_chr%s.legend.gz"
        mapFile           = "${ref_1.dir}/genetic_map_chr%s_combined_b37.txt"
    }
    eagle_genetic_map       = "${homedir}/tables/genetic_map_hg19_withX.txt.gz"

    // chunk size in base
    NE                      = "20000"
    impute_iter             = "10"
    impute_burnin           = "2" // must be less than impute_burnin
    impute_info_cutoff      = "0.8"
    chunk_size              = "1000000"

    // Data in PLINK bed format
    studyDir                = "/global5/scratch/gerrit/projects/chipimputation/test.small/small/study"
    bedFile                 = "${studyDir}/small.yri.bed"
    famFile                 = "${studyDir}/small.yri.fam"
    bimFile                 = "${studyDir}/small.yri.bim"

    //chromosomes             = "ALL"
    chromosomes             = "20,21,22"

    // Plink QC parameters
    cut_mind                = "0.999"
    cut_geno                = "0.0001"
    cut_hwe                 = "1E-8"

    // Phasing method: shapeit (default) or eagle2
    phasing_method          = "eagle"
}

executor{
    jobName = { "$task.tag" }
}
